// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"test_task_stat4market/internal/generated/models"

	"github.com/go-openapi/runtime"
)

// GetEventOKCode is the HTTP code returned for type GetEventOK
const GetEventOKCode int = 200

/*
GetEventOK Успешный ответ

swagger:response getEventOK
*/
type GetEventOK struct {

	/*
	  In: Body
	*/
	Payload *models.GetEventResponse `json:"body,omitempty"`
}

// NewGetEventOK creates GetEventOK with default headers values
func NewGetEventOK() *GetEventOK {

	return &GetEventOK{}
}

// WithPayload adds the payload to the get event o k response
func (o *GetEventOK) WithPayload(payload *models.GetEventResponse) *GetEventOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get event o k response
func (o *GetEventOK) SetPayload(payload *models.GetEventResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEventOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEventInternalServerErrorCode is the HTTP code returned for type GetEventInternalServerError
const GetEventInternalServerErrorCode int = 500

/*
GetEventInternalServerError Ошибка сервера

swagger:response getEventInternalServerError
*/
type GetEventInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewGetEventInternalServerError creates GetEventInternalServerError with default headers values
func NewGetEventInternalServerError() *GetEventInternalServerError {

	return &GetEventInternalServerError{}
}

// WithPayload adds the payload to the get event internal server error response
func (o *GetEventInternalServerError) WithPayload(payload *models.ErrorResponse) *GetEventInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get event internal server error response
func (o *GetEventInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEventInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
